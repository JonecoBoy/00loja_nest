// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String
  first_name String
  last_name  String
  roles      Role[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  customer   Customer?

  @@map("users")
}

model Customer {
  id                  String              @id @default(uuid())
  user                User                @relation(fields: [user_id], references: [id])
  user_id             String              @unique
  identification      String              @unique
  identification_type IdentificationType?
  customer_addresses  CustomerAddress[]
  created_at          DateTime            @default(now())
  updated_at          DateTime            @updatedAt
  deleted_at          DateTime?
  Order               Order[]

  @@map("customers")
}

model CustomerAddress {
  id            String    @id @default(uuid())
  description   String?
  first_name    String
  last_name     String
  company       String?
  street        String
  number        Int?
  complement    String?
  neighboorhood String?
  city          String
  state         String
  country       String
  postcode      String
  Customer      Customer? @relation(fields: [customer_id], references: [id])
  customer_id   String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?

  Order Order[]
  @@map("customer_addresses")
}

model Order {
  id                  String          @id @default(uuid())
  comment             String?         @db.Text
  products            Product[]
  customer            Customer        @relation(fields: [customer_id], references: [id])
  customer_id         String
  customer_address    CustomerAddress @relation(fields: [customer_address_id], references: [id])
  customer_address_id String
  created_at          DateTime        @default(now())
  updated_at          DateTime        @updatedAt
  deleted_at          DateTime?

  @@map("orders")
}

model Discount {
  id            String       @id @default(uuid())
  discount_type DiscountType

  @@map("discounts")
}

// model OrderTransaction {
//   id      String @id @default(uuid())
//   product String
// created_at DateTime  @default(now())
// updated_at DateTime  @updatedAt
// deleted_at DateTime?
// }

model Product {
  id                 String            @id @default(uuid())
  name               String
  description        String?
  slug               String            @unique
  product_categories ProductCategory[]
  sku                String?
  price              Int
  weight_unit        WeightUnit        @default(G)
  weight             Float
  length_unit        LengthUnit        @default(MM)
  length             Float
  width              Float
  height             Float
  minimum_amount     Int               @default(1)
  images             Image[]
  files              ProductFile[]
  products           Order[]
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt
  deleted_at         DateTime?

  @@map("products")
}

model ProductCategory {
  id            String    @id @default(uuid())
  name          String
  description   String?
  slug          String    @unique
  main_category String?
  products      Product[]
  image         Image[]
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?

  @@map("product_categories")
}

model ProductFile {
  id          String    @id @default(uuid())
  name        String
  description String?
  url         String
  Product     Product?  @relation(fields: [product_id], references: [id])
  product_id  String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?

  @@map("product_files")
}

model Image {
  id                  String           @id @default(uuid())
  name                String
  description         String?
  url                 String
  Product             Product?         @relation(fields: [product_id], references: [id])
  product_id          String?
  ProductCategory     ProductCategory? @relation(fields: [product_category_id], references: [id])
  product_category_id String?
  created_at          DateTime         @default(now())
  updated_at          DateTime         @updatedAt
  deleted_at          DateTime?

  @@map("images")
}

enum Role {
  USER
  ADMIN
  STAFF
}

enum IdentificationType {
  CPF
  CNPJ
  PASSPORT
}

enum WeightUnit {
  G
  KG
  TON
}

enum LengthUnit {
  MM
  CM
  M
}

enum DiscountType {
  PERCENTAGE
  VALUE
}

enum ImageType {
  COVER
  BANNER
  COMMON
}

// prisma migrate dev
