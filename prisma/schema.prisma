// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  first_name String
  last_name  String
  role       Role
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deletedAt  DateTime?

  @@map("users")
}

model Customer {
  id                  String             @id @default(uuid())
  email               String             @unique
  first_name          String
  last_name           String
  identification      Int                @unique
  identification_type IdentificationType
  customer_addresses  CustomerAddress[]
  orders              Order[]
  created_at          DateTime           @default(now())
  updated_at          DateTime           @updatedAt
  deletedAt           DateTime?

  @@map("customers")
}

model CustomerAddress {
  id            String    @id @default(uuid())
  description   String?
  first_name    String
  last_name     String
  company       String?
  street        String
  number        Int?
  complement    String?
  neighboorhood String?
  city          String
  state         String
  country       String
  postcode      String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deletedAt     DateTime?
  Customer      Customer? @relation(fields: [customerId], references: [id])
  customerId    String?

  @@map("customer_addresses")
}

model Order {
  id         String    @id @default(uuid())
  email      String    @unique
  first_name String
  last_name  String
  comment    String    @db.Text
  products   Product[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deletedAt  DateTime?
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?

  @@map("orders")
}

model Discount {
  id            String       @id @default(uuid())
  discount_type DiscountType
}

model OrderTransaction {
  id      String @id @default(uuid())
  product String
}

model Product {
  id                 String            @id @default(uuid())
  name               String
  description        String?
  slug               String            @unique
  prodcut_categories ProductCategory[]
  sku                String?
  price              Int
  weight_unit        WeightUnit        @default(G)
  weight             Float
  length_unit        LengthUnit        @default(MM)
  length             Float
  width              Float
  height             Float
  minimum_amount     Int               @default(1)
  images             Image[]
  orders             Order[]
  files              ProductFile[]
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt
  deletedAt          DateTime?

  @@map("products")
}

model ProductCategory {
  id            String    @id @default(uuid())
  name          String
  description   String?
  slug          String    @unique
  main_category String?
  products      Product[]
  image         Image[]

  @@map("product_category")
}

model ProductFile {
  id          String   @id @default(uuid())
  name        String
  description String?
  url         String
  Product     Product? @relation(fields: [productId], references: [id])
  productId   String?
}

model Image {
  id                String           @id @default(uuid())
  name              String
  description       String?
  url               String
  Product           Product?         @relation(fields: [productId], references: [id])
  productId         String?
  ProductCategory   ProductCategory? @relation(fields: [productCategoryId], references: [id])
  productCategoryId String?
}

enum Role {
  USER
  ADMIN
  STAFF
}

enum IdentificationType {
  CPF
  CNPJ
  PASSPORT
}

enum WeightUnit {
  G
  KG
  TON
}

enum LengthUnit {
  MM
  CM
  M
}

enum DiscountType {
  PERCENTAGE
  VALUE
}

enum ImageType {
  COVER
  BANNER
  COMMON
}

// prisma migrate dev
